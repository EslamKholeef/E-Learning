@model DistanceLearning.Models.CourseModel
@using DistanceLearning.Models;
@{
    ApplicationDbContext db = new ApplicationDbContext();
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "CourseModels", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CategoryId)

    <div class="form-horizontal">
        <h4>CourseModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AboutTheCourse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea name="AboutTheCourse" id="AboutTheCourse"></textarea>
                @Html.ValidationMessageFor(model => model.AboutTheCourse, "", new { @class = "text-danger" })
            </div>
        </div>


        @*
                    <div class="form-group">
                        @Html.LabelFor(model => model.Paths, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Paths, new { htmlAttributes = new { @class = "form-control" } })
                <input type="text" name="NewPath" />

                @Html.ValidationMessageFor(model => model.Paths, "", new { @class = "text-danger" })
            </div>
                </div>
        *@


        @*@Html.DropDownList("Categories", null, new { @class = "UserTypeList " })*@



        <select name="CategoryName">
            @foreach (var item in db.Categories)
            {
                <option value="@item.Name">@item.Name</option>
            }
        </select>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseLogo, htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="file" name="CourseLogo" />
            @Html.ValidationMessageFor(model => model.CourseLogo, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DemoAboutTheCourse, htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="file" name="CourseDemo" />
            @Html.ValidationMessageFor(model => model.DemoAboutTheCourse, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Content/ckeditor/ckeditor.js"></script>

<script>

    CKEDITOR.replace("AboutTheCourse");

</script>